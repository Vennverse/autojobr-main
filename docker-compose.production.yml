version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: autojobr_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: autojobr
      POSTGRES_USER: autojobr_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-autojobr_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autojobr_user -d autojobr"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AutoJobr Application
  autojobr:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: autojobr_app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://autojobr_user:${DB_PASSWORD:-autojobr_secure_password}@postgres:5432/autojobr
      GROQ_API_KEY: ${GROQ_API_KEY}
      RESEND_API_KEY: ${RESEND_API_KEY}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID:-}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET:-}
      SESSION_SECRET: ${SESSION_SECRET:-default_session_secret_change_me}
      PORT: 5000
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: autojobr_nginx
    restart: unless-stopped
    depends_on:
      - autojobr
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # SSL Certificate Management
  certbot:
    image: certbot/certbot
    container_name: autojobr_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: autojobr_network